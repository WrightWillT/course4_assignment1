a <-available.packages()
View(a)
install.packages("slidify")
install.packages("slidify")
a <-available.packages()
install.packages("slidify")
find.packages("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("slidify")
library(devtools)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
library(slidify)
getwd()
x <- c(1,3,5)
y <- c(3,2,10)
rbind(x,y)
x <- list(2,"a","b",TRUE)
x[[1]]
x<-1:4
y<-2:3
x+y
x<-c(1+0i,2+4i)
x(1)
x[1]
x[[1]]
class(x)
class(y)
x<-1
class(x)
x<-1L
class(s)
class(x)
x<-c(1L,1,7.6)
class(x)
as.integer(x)
class(x)
as.logical(x)
x
class(x)
as.character(x)
x
as.numeric(x)
as.complex(x)
x<-c("a","b","c")
as.numeric(x)
class(x)
m<-matrix(nrow=2,ncol=3)
m
attributes(m)
x <- factor(c("yes","yes","no","yes","no"))
x
table(x)
unclass(x)
x
attr(,"levels")
is.nan(x)
x <- c(1,2,NA,NaN,3)
is.na(x)
is.nan(x)
x <- c("a","b","c","d","a")
x[1]
x[2]
x[1:4]
x[1,4]
x[x>"a"]
x[x<"c"]
u <- x>"a"
u
x[u]
x <- list(foo 1:4, bar =.6)
x <- list(foo= 1:4, bar =.6)
x
x
x[1]
x[[1]]
x$bar
x$foo
x <- c(1,2,NA,4,NA,5)
x
bad <- is.na(x)
x[!bad]
vectorized operations
r.version.string
R.version.string
install.packages("swirl")
library(swirl)
rm(list=ls())
swirl
install_from_swirl("R Programming")
swirl()
5 + 7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x<-9
ls()
list.files()
?list.files
args(list.function())
args(list.function)
?args
args(list.files)
old.dir<-dir()
old.dir<-getwd()
dir.create(testdir)
dir.create("testdir")
setwd("testdir")
file.create(mytest.R)
file.create("mytest.R")
dir()
file.exists("mytest.R")
file.info("mytest.R")
?file.rename
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("folder1","folder2")
?dir.create
dir.create("testdir2")
dir.create(file.path('testdir2','testdir3'),recursive=TRUE)
?unlink
unlink('testdir2',recursive=TRUE)
setwd(old.dir)
unlink('testdir',recursive=TRUE)
x<-1:10
x
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
z<-10
f(3)
swirl()
1:20
pi:10
15:1
?':'
seq(1,20)
?seq
seq(0,10,by=0.5)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2)times=10)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
swirl()
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum
)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <-- lapply (flags,unique)
unique_vals <-- lapply(flags,unique)
unique_vals <- lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
library(swirl)
swirl()
?sample
sample(1:6,5,replate=TRUE)
sample(1:6,5,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,10)
print(LETTERS)
LETTERS
sample(LETTERS)
flips <- sample(c(0,1),100,REPLACE= TRUE, prob=c(.3,.7))
flips <- sample(c(0,1),100, prob=c(.3,.7))
flips <- sample(c(0,1),100, replace= TRUE, prob=c(.3,.7))
flips
sum(flips)
rbinom()
?rbinom
rbinom(1,size=100,prob=.7)
flips2 <- rbinom(100,1,.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,mean=100, sd=25)
?rpois
rpois(5, 10)
my_pois<-replicate(100,rpois(5,10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
plot1()
plot1.R()
setwd(readClipboard())
# check to see if the project folder exists; if not, create it
if(!file.exists("./course4_assignment1")){dir.create("./course4_assignment1")}
# download the file
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl,destfile="./course4_assignment1/Dataset.zip")
# because keeping track of the download date helps when troubleshooting
dateDownloaded <- date()
# unzip the file
unzip(zipfile="./course4_assignment1/Dataset.zip",exdir="./course4_assignment1")
path_rf <- file.path("./course4_assignment1" , "household_power_consumption.txt")
# Read the Activity Files
data.all  <- read.table(file.path(path_rf), header = TRUE, sep = ";")
# subset by the two days we're after
data <- subset(data.all, data.all$Date == "1/2/2007" | data.all$Date =="2/2/2007")
globalActivePower <- as.numeric(as.character(data$Global_active_power))
# create histogram using the hexcode for the weird orange color (used Photoshop to get)
# and also save that as a png
png("plot1.png", width=480, height=480)
hist(globalActivePower, col = "#d93e12", xlab = "Global Active Power (kilowatts)", main = "Global Active Power")
dev.off()
plot(data$Date,globalActivePower, type=1)
# check to see if the project folder exists; if not, create it
if(!file.exists("./course4_assignment1")){dir.create("./course4_assignment1")}
# download the file
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl,destfile="./course4_assignment1/Dataset.zip")
# because keeping track of the download date helps when troubleshooting
dateDownloaded <- date()
# unzip the file
unzip(zipfile="./course4_assignment1/Dataset.zip",exdir="./course4_assignment1")
path_rf <- file.path("./course4_assignment1" , "household_power_consumption.txt")
# Read the Activity Files
data.all  <- read.table(file.path(path_rf), header = TRUE, sep = ";", na.strings="?")
# subset by the two days we're after
data <- subset(data.all, data.all$Date == "1/2/2007" | data.all$Date =="2/2/2007")
globalActivePower <- as.numeric(as.character(data$Global_active_power))
# create histogram using the hexcode for the weird orange color (used Photoshop to get)
# and also save that as a png
png("plot1.png", width=480, height=480)
hist(globalActivePower, col = "#d93e12", xlab = "Global Active Power (kilowatts)", main = "Global Active Power")
dev.off()
plot(data$Date,globalActivePower, type=1, xlab="", ylab="Global Active Power (kilowatts)")
head(data$Date)
plot(data$Date,globalActivePower, type="1", xlab="", ylab="Global Active Power (kilowatts)")
plot(data$Date,globalActivePower, type="1", xlab="", ylab="Global Active Power (kilowatts)")
?hist
?plot
plot(data$Date,globalActivePower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
plot(data$Date,globalActivePower, type="b", xlab="", ylab="Global Active Power (kilowatts)")
plot(data$Date,globalActivePower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
# check to see if the project folder exists; if not, create it
if(!file.exists("./course4_assignment1")){dir.create("./course4_assignment1")}
# download the file
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl,destfile="./course4_assignment1/Dataset.zip")
# because keeping track of the download date helps when troubleshooting
dateDownloaded <- date()
# unzip the file
unzip(zipfile="./course4_assignment1/Dataset.zip",exdir="./course4_assignment1")
path_rf <- file.path("./course4_assignment1" , "household_power_consumption.txt")
# Read the Activity Files
data.all  <- read.table(file.path(path_rf), header = TRUE, sep = ";", na.strings="?")
# subset by the two days we're after
data <- subset(data.all, data.all$Date == "1/2/2007" | data.all$Date =="2/2/2007")
globalActivePower <- as.numeric(as.character(data$Global_active_power))
# create histogram using the hexcode for the weird orange color (used Photoshop to get)
# and also save that as a png
png("plot2.png")
plot(data$Date,globalActivePower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
dev.off()
